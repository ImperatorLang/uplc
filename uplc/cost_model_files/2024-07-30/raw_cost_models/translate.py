import re
import json
import sys
from typing import Dict


def translate(version, costs) -> Dict[str, int]:
    if version == "PlutusV1":
        return {
            "add_integer-cpu-arguments-intercept": costs[0],
            "add_integer-cpu-arguments-slope": costs[1],
            "add_integer-mem-arguments-intercept": costs[2],
            "add_integer-mem-arguments-slope": costs[3],
            "append_byte_string-cpu-arguments-intercept": costs[4],
            "append_byte_string-cpu-arguments-slope": costs[5],
            "append_byte_string-mem-arguments-intercept": costs[6],
            "append_byte_string-mem-arguments-slope": costs[7],
            "append_string-cpu-arguments-intercept": costs[8],
            "append_string-cpu-arguments-slope": costs[9],
            "append_string-mem-arguments-intercept": costs[10],
            "append_string-mem-arguments-slope": costs[11],
            "b_data-cpu-arguments": costs[12],
            "b_data-mem-arguments": costs[13],
            "blake2b_256-cpu-arguments-intercept": costs[14],
            "blake2b_256-cpu-arguments-slope": costs[15],
            "blake2b_256-mem-arguments": costs[16],
            "cek_apply_cost-exBudgetCPU": costs[17],
            "cek_apply_cost-exBudgetmem": costs[18],
            "cek_builtin_cost-exBudgetCPU": costs[19],
            "cek_builtin_cost-exBudgetmem": costs[20],
            "cek_const_cost-exBudgetCPU": costs[21],
            "cek_const_cost-exBudgetmem": costs[22],
            "cek_delay_cost-exBudgetCPU": costs[23],
            "cek_delay_cost-exBudgetmem": costs[24],
            "cek_force_cost-exBudgetCPU": costs[25],
            "cek_force_cost-exBudgetmem": costs[26],
            "cek_lam_cost-exBudgetCPU": costs[27],
            "cek_lam_cost-exBudgetmem": costs[28],
            "cek_startup_cost-exBudgetCPU": costs[29],
            "cek_startup_cost-exBudgetmem": costs[30],
            "cek_var_cost-exBudgetCPU": costs[31],
            "cek_var_cost-exBudgetmem": costs[32],
            "choose_data-cpu-arguments": costs[33],
            "choose_data-mem-arguments": costs[34],
            "choose_list-cpu-arguments": costs[35],
            "choose_list-mem-arguments": costs[36],
            "choose_unit-cpu-arguments": costs[37],
            "choose_unit-mem-arguments": costs[38],
            "cons_byte_string-cpu-arguments-intercept": costs[39],
            "cons_byte_string-cpu-arguments-slope": costs[40],
            "cons_byte_string-mem-arguments-intercept": costs[41],
            "cons_byte_string-mem-arguments-slope": costs[42],
            "constr_data-cpu-arguments": costs[43],
            "constr_data-mem-arguments": costs[44],
            "decode_utf8-cpu-arguments-intercept": costs[45],
            "decode_utf8-cpu-arguments-slope": costs[46],
            "decode_utf8-mem-arguments-intercept": costs[47],
            "decode_utf8-mem-arguments-slope": costs[48],
            "divide_integer-cpu-arguments-constant": costs[49],
            "divide_integer-cpu-arguments-model-arguments-intercept": costs[50],
            "divide_integer-cpu-arguments-model-arguments-slope": costs[51],
            "divide_integer-mem-arguments-intercept": costs[52],
            "divide_integer-mem-arguments-minimum": costs[53],
            "divide_integer-mem-arguments-slope": costs[54],
            "encode_utf8-cpu-arguments-intercept": costs[55],
            "encode_utf8-cpu-arguments-slope": costs[56],
            "encode_utf8-mem-arguments-intercept": costs[57],
            "encode_utf8-mem-arguments-slope": costs[58],
            "equals_byte_string-cpu-arguments-constant": costs[59],
            "equals_byte_string-cpu-arguments-intercept": costs[60],
            "equals_byte_string-cpu-arguments-slope": costs[61],
            "equals_byte_string-mem-arguments": costs[62],
            "equals_data-cpu-arguments-intercept": costs[63],
            "equals_data-cpu-arguments-slope": costs[64],
            "equals_data-mem-arguments": costs[65],
            "equals_integer-cpu-arguments-intercept": costs[66],
            "equals_integer-cpu-arguments-slope": costs[67],
            "equals_integer-mem-arguments": costs[68],
            "equals_string-cpu-arguments-constant": costs[69],
            "equals_string-cpu-arguments-intercept": costs[70],
            "equals_string-cpu-arguments-slope": costs[71],
            "equals_string-mem-arguments": costs[72],
            "fst_pair-cpu-arguments": costs[73],
            "fst_pair-mem-arguments": costs[74],
            "head_list-cpu-arguments": costs[75],
            "head_list-mem-arguments": costs[76],
            "i_data-cpu-arguments": costs[77],
            "i_data-mem-arguments": costs[78],
            "if_then_else-cpu-arguments": costs[79],
            "if_then_else-mem-arguments": costs[80],
            "index_byte_string-cpu-arguments": costs[81],
            "index_byte_string-mem-arguments": costs[82],
            "length_of_byte_string-cpu-arguments": costs[83],
            "length_of_byte_string-mem-arguments": costs[84],
            "less_than_byte_string-cpu-arguments-intercept": costs[85],
            "less_than_byte_string-cpu-arguments-slope": costs[86],
            "less_than_byte_string-mem-arguments": costs[87],
            "less_than_equals_byte_string-cpu-arguments-intercept": costs[88],
            "less_than_equals_byte_string-cpu-arguments-slope": costs[89],
            "less_than_equals_byte_string-mem-arguments": costs[90],
            "less_than_equals_integer-cpu-arguments-intercept": costs[91],
            "less_than_equals_integer-cpu-arguments-slope": costs[92],
            "less_than_equals_integer-mem-arguments": costs[93],
            "less_than_integer-cpu-arguments-intercept": costs[94],
            "less_than_integer-cpu-arguments-slope": costs[95],
            "less_than_integer-mem-arguments": costs[96],
            "list_data-cpu-arguments": costs[97],
            "list_data-mem-arguments": costs[98],
            "map_data-cpu-arguments": costs[99],
            "map_data-mem-arguments": costs[100],
            "mk_cons-cpu-arguments": costs[101],
            "mk_cons-mem-arguments": costs[102],
            "mk_nil_data-cpu-arguments": costs[103],
            "mk_nil_data-mem-arguments": costs[104],
            "mk_nil_pair_data-cpu-arguments": costs[105],
            "mk_nil_pair_data-mem-arguments": costs[106],
            "mk_pair_data-cpu-arguments": costs[107],
            "mk_pair_data-mem-arguments": costs[108],
            "mod_integer-cpu-arguments-constant": costs[109],
            "mod_integer-cpu-arguments-model-arguments-intercept": costs[110],
            "mod_integer-cpu-arguments-model-arguments-slope": costs[111],
            "mod_integer-mem-arguments-intercept": costs[112],
            "mod_integer-mem-arguments-minimum": costs[113],
            "mod_integer-mem-arguments-slope": costs[114],
            "multiply_integer-cpu-arguments-intercept": costs[115],
            "multiply_integer-cpu-arguments-slope": costs[116],
            "multiply_integer-mem-arguments-intercept": costs[117],
            "multiply_integer-mem-arguments-slope": costs[118],
            "null_list-cpu-arguments": costs[119],
            "null_list-mem-arguments": costs[120],
            "quotient_integer-cpu-arguments-constant": costs[121],
            "quotient_integer-cpu-arguments-model-arguments-intercept": costs[122],
            "quotient_integer-cpu-arguments-model-arguments-slope": costs[123],
            "quotient_integer-mem-arguments-intercept": costs[124],
            "quotient_integer-mem-arguments-minimum": costs[125],
            "quotient_integer-mem-arguments-slope": costs[126],
            "remainder_integer-cpu-arguments-constant": costs[127],
            "remainder_integer-cpu-arguments-model-arguments-intercept": costs[128],
            "remainder_integer-cpu-arguments-model-arguments-slope": costs[129],
            "remainder_integer-mem-arguments-intercept": costs[130],
            "remainder_integer-mem-arguments-minimum": costs[131],
            "remainder_integer-mem-arguments-slope": costs[132],
            "sha2_256-cpu-arguments-intercept": costs[133],
            "sha2_256-cpu-arguments-slope": costs[134],
            "sha2_256-mem-arguments": costs[135],
            "sha3_256-cpu-arguments-intercept": costs[136],
            "sha3_256-cpu-arguments-slope": costs[137],
            "sha3_256-mem-arguments": costs[138],
            "slice_byte_string-cpu-arguments-intercept": costs[139],
            "slice_byte_string-cpu-arguments-slope": costs[140],
            "slice_byte_string-mem-arguments-intercept": costs[141],
            "slice_byte_string-mem-arguments-slope": costs[142],
            "snd_pair-cpu-arguments": costs[143],
            "snd_pair-mem-arguments": costs[144],
            "subtract_integer-cpu-arguments-intercept": costs[145],
            "subtract_integer-cpu-arguments-slope": costs[146],
            "subtract_integer-mem-arguments-intercept": costs[147],
            "subtract_integer-mem-arguments-slope": costs[148],
            "tail_list-cpu-arguments": costs[149],
            "tail_list-mem-arguments": costs[150],
            "trace-cpu-arguments": costs[151],
            "trace-mem-arguments": costs[152],
            "un_b_data-cpu-arguments": costs[153],
            "un_b_data-mem-arguments": costs[154],
            "un_constr_data-cpu-arguments": costs[155],
            "un_constr_data-mem-arguments": costs[156],
            "un_i_data-cpu-arguments": costs[157],
            "un_i_data-mem-arguments": costs[158],
            "un_list_data-cpu-arguments": costs[159],
            "un_list_data-mem-arguments": costs[160],
            "un_map_data-cpu-arguments": costs[161],
            "un_map_data-mem-arguments": costs[162],
            "verify_ed25519_signature-cpu-arguments-intercept": costs[163],
            "verify_ed25519_signature-cpu-arguments-slope": costs[164],
            "verify_ed25519_signature-mem-arguments": costs[165],
        }
    if version == "PlutusV2":
        return {
            "add_integer-cpu-arguments-intercept": costs[0],
            "add_integer-cpu-arguments-slope": costs[1],
            "add_integer-mem-arguments-intercept": costs[2],
            "add_integer-mem-arguments-slope": costs[3],
            "append_byte_string-cpu-arguments-intercept": costs[4],
            "append_byte_string-cpu-arguments-slope": costs[5],
            "append_byte_string-mem-arguments-intercept": costs[6],
            "append_byte_string-mem-arguments-slope": costs[7],
            "append_string-cpu-arguments-intercept": costs[8],
            "append_string-cpu-arguments-slope": costs[9],
            "append_string-mem-arguments-intercept": costs[10],
            "append_string-mem-arguments-slope": costs[11],
            "b_data-cpu-arguments": costs[12],
            "b_data-mem-arguments": costs[13],
            "blake2b_256-cpu-arguments-intercept": costs[14],
            "blake2b_256-cpu-arguments-slope": costs[15],
            "blake2b_256-mem-arguments": costs[16],
            "cek_apply_cost-exBudgetCPU": costs[17],
            "cek_apply_cost-exBudgetmem": costs[18],
            "cek_builtin_cost-exBudgetCPU": costs[19],
            "cek_builtin_cost-exBudgetmem": costs[20],
            "cek_const_cost-exBudgetCPU": costs[21],
            "cek_const_cost-exBudgetmem": costs[22],
            "cek_delay_cost-exBudgetCPU": costs[23],
            "cek_delay_cost-exBudgetmem": costs[24],
            "cek_force_cost-exBudgetCPU": costs[25],
            "cek_force_cost-exBudgetmem": costs[26],
            "cek_lam_cost-exBudgetCPU": costs[27],
            "cek_lam_cost-exBudgetmem": costs[28],
            "cek_startup_cost-exBudgetCPU": costs[29],
            "cek_startup_cost-exBudgetmem": costs[30],
            "cek_var_cost-exBudgetCPU": costs[31],
            "cek_var_cost-exBudgetmem": costs[32],
            "choose_data-cpu-arguments": costs[33],
            "choose_data-mem-arguments": costs[34],
            "choose_list-cpu-arguments": costs[35],
            "choose_list-mem-arguments": costs[36],
            "choose_unit-cpu-arguments": costs[37],
            "choose_unit-mem-arguments": costs[38],
            "cons_byte_string-cpu-arguments-intercept": costs[39],
            "cons_byte_string-cpu-arguments-slope": costs[40],
            "cons_byte_string-mem-arguments-intercept": costs[41],
            "cons_byte_string-mem-arguments-slope": costs[42],
            "constr_data-cpu-arguments": costs[43],
            "constr_data-mem-arguments": costs[44],
            "decode_utf8-cpu-arguments-intercept": costs[45],
            "decode_utf8-cpu-arguments-slope": costs[46],
            "decode_utf8-mem-arguments-intercept": costs[47],
            "decode_utf8-mem-arguments-slope": costs[48],
            "divide_integer-cpu-arguments-constant": costs[49],
            "divide_integer-cpu-arguments-model-arguments-intercept": costs[50],
            "divide_integer-cpu-arguments-model-arguments-slope": costs[51],
            "divide_integer-mem-arguments-intercept": costs[52],
            "divide_integer-mem-arguments-minimum": costs[53],
            "divide_integer-mem-arguments-slope": costs[54],
            "encode_utf8-cpu-arguments-intercept": costs[55],
            "encode_utf8-cpu-arguments-slope": costs[56],
            "encode_utf8-mem-arguments-intercept": costs[57],
            "encode_utf8-mem-arguments-slope": costs[58],
            "equals_byte_string-cpu-arguments-constant": costs[59],
            "equals_byte_string-cpu-arguments-intercept": costs[60],
            "equals_byte_string-cpu-arguments-slope": costs[61],
            "equals_byte_string-mem-arguments": costs[62],
            "equals_data-cpu-arguments-intercept": costs[63],
            "equals_data-cpu-arguments-slope": costs[64],
            "equals_data-mem-arguments": costs[65],
            "equals_integer-cpu-arguments-intercept": costs[66],
            "equals_integer-cpu-arguments-slope": costs[67],
            "equals_integer-mem-arguments": costs[68],
            "equals_string-cpu-arguments-constant": costs[69],
            "equals_string-cpu-arguments-intercept": costs[70],
            "equals_string-cpu-arguments-slope": costs[71],
            "equals_string-mem-arguments": costs[72],
            "fst_pair-cpu-arguments": costs[73],
            "fst_pair-mem-arguments": costs[74],
            "head_list-cpu-arguments": costs[75],
            "head_list-mem-arguments": costs[76],
            "i_data-cpu-arguments": costs[77],
            "i_data-mem-arguments": costs[78],
            "if_then_else-cpu-arguments": costs[79],
            "if_then_else-mem-arguments": costs[80],
            "index_byte_string-cpu-arguments": costs[81],
            "index_byte_string-mem-arguments": costs[82],
            "length_of_byte_string-cpu-arguments": costs[83],
            "length_of_byte_string-mem-arguments": costs[84],
            "less_than_byte_string-cpu-arguments-intercept": costs[85],
            "less_than_byte_string-cpu-arguments-slope": costs[86],
            "less_than_byte_string-mem-arguments": costs[87],
            "less_than_equals_byte_string-cpu-arguments-intercept": costs[88],
            "less_than_equals_byte_string-cpu-arguments-slope": costs[89],
            "less_than_equals_byte_string-mem-arguments": costs[90],
            "less_than_equals_integer-cpu-arguments-intercept": costs[91],
            "less_than_equals_integer-cpu-arguments-slope": costs[92],
            "less_than_equals_integer-mem-arguments": costs[93],
            "less_than_integer-cpu-arguments-intercept": costs[94],
            "less_than_integer-cpu-arguments-slope": costs[95],
            "less_than_integer-mem-arguments": costs[96],
            "list_data-cpu-arguments": costs[97],
            "list_data-mem-arguments": costs[98],
            "map_data-cpu-arguments": costs[99],
            "map_data-mem-arguments": costs[100],
            "mk_cons-cpu-arguments": costs[101],
            "mk_cons-mem-arguments": costs[102],
            "mk_nil_data-cpu-arguments": costs[103],
            "mk_nil_data-mem-arguments": costs[104],
            "mk_nil_pair_data-cpu-arguments": costs[105],
            "mk_nil_pair_data-mem-arguments": costs[106],
            "mk_pair_data-cpu-arguments": costs[107],
            "mk_pair_data-mem-arguments": costs[108],
            "mod_integer-cpu-arguments-constant": costs[109],
            "mod_integer-cpu-arguments-model-arguments-intercept": costs[110],
            "mod_integer-cpu-arguments-model-arguments-slope": costs[111],
            "mod_integer-mem-arguments-intercept": costs[112],
            "mod_integer-mem-arguments-minimum": costs[113],
            "mod_integer-mem-arguments-slope": costs[114],
            "multiply_integer-cpu-arguments-intercept": costs[115],
            "multiply_integer-cpu-arguments-slope": costs[116],
            "multiply_integer-mem-arguments-intercept": costs[117],
            "multiply_integer-mem-arguments-slope": costs[118],
            "null_list-cpu-arguments": costs[119],
            "null_list-mem-arguments": costs[120],
            "quotient_integer-cpu-arguments-constant": costs[121],
            "quotient_integer-cpu-arguments-model-arguments-intercept": costs[122],
            "quotient_integer-cpu-arguments-model-arguments-slope": costs[123],
            "quotient_integer-mem-arguments-intercept": costs[124],
            "quotient_integer-mem-arguments-minimum": costs[125],
            "quotient_integer-mem-arguments-slope": costs[126],
            "remainder_integer-cpu-arguments-constant": costs[127],
            "remainder_integer-cpu-arguments-model-arguments-intercept": costs[128],
            "remainder_integer-cpu-arguments-model-arguments-slope": costs[129],
            "remainder_integer-mem-arguments-intercept": costs[130],
            "remainder_integer-mem-arguments-minimum": costs[131],
            "remainder_integer-mem-arguments-slope": costs[132],
            "serialise_data-cpu-arguments-intercept": costs[133],
            "serialise_data-cpu-arguments-slope": costs[134],
            "serialise_data-mem-arguments-intercept": costs[135],
            "serialise_data-mem-arguments-slope": costs[136],
            "sha2_256-cpu-arguments-intercept": costs[137],
            "sha2_256-cpu-arguments-slope": costs[138],
            "sha2_256-mem-arguments": costs[139],
            "sha3_256-cpu-arguments-intercept": costs[140],
            "sha3_256-cpu-arguments-slope": costs[141],
            "sha3_256-mem-arguments": costs[142],
            "slice_byte_string-cpu-arguments-intercept": costs[143],
            "slice_byte_string-cpu-arguments-slope": costs[144],
            "slice_byte_string-mem-arguments-intercept": costs[145],
            "slice_byte_string-mem-arguments-slope": costs[146],
            "snd_pair-cpu-arguments": costs[147],
            "snd_pair-mem-arguments": costs[148],
            "subtract_integer-cpu-arguments-intercept": costs[149],
            "subtract_integer-cpu-arguments-slope": costs[150],
            "subtract_integer-mem-arguments-intercept": costs[151],
            "subtract_integer-mem-arguments-slope": costs[152],
            "tail_list-cpu-arguments": costs[153],
            "tail_list-mem-arguments": costs[154],
            "trace-cpu-arguments": costs[155],
            "trace-mem-arguments": costs[156],
            "un_b_data-cpu-arguments": costs[157],
            "un_b_data-mem-arguments": costs[158],
            "un_constr_data-cpu-arguments": costs[159],
            "un_constr_data-mem-arguments": costs[160],
            "un_i_data-cpu-arguments": costs[161],
            "un_i_data-mem-arguments": costs[162],
            "un_list_data-cpu-arguments": costs[163],
            "un_list_data-mem-arguments": costs[164],
            "un_map_data-cpu-arguments": costs[165],
            "un_map_data-mem-arguments": costs[166],
            "verify_ecdsa_secp256k1_signature-cpu-arguments": costs[167],
            "verify_ecdsa_secp256k1_signature-mem-arguments": costs[168],
            "verify_ed25519_signature-cpu-arguments-intercept": costs[169],
            "verify_ed25519_signature-cpu-arguments-slope": costs[170],
            "verify_ed25519_signature-mem-arguments": costs[171],
            "verify_schnorr_secp256k1_signature-cpu-arguments-intercept": costs[172],
            "verify_schnorr_secp256k1_signature-cpu-arguments-slope": costs[173],
            "verify_schnorr_secp256k1_signature-mem-arguments": costs[174],
        }
    if version == "PlutusV3":
        ret = {
            "add_integer-cpu-arguments-intercept": costs[0],
            "add_integer-cpu-arguments-slope": costs[1],
            "add_integer-mem-arguments-intercept": costs[2],
            "add_integer-mem-arguments-slope": costs[3],
            "append_byte_string-cpu-arguments-intercept": costs[4],
            "append_byte_string-cpu-arguments-slope": costs[5],
            "append_byte_string-mem-arguments-intercept": costs[6],
            "append_byte_string-mem-arguments-slope": costs[7],
            "append_string-cpu-arguments-intercept": costs[8],
            "append_string-cpu-arguments-slope": costs[9],
            "append_string-mem-arguments-intercept": costs[10],
            "append_string-mem-arguments-slope": costs[11],
            "b_data-cpu-arguments": costs[12],
            "b_data-mem-arguments": costs[13],
            "blake2b_256-cpu-arguments-intercept": costs[14],
            "blake2b_256-cpu-arguments-slope": costs[15],
            "blake2b_256-mem-arguments": costs[16],
            "cek_apply_cost-exBudgetCPU": costs[17],
            "cek_apply_cost-exBudgetmem": costs[18],
            "cek_builtin_cost-exBudgetCPU": costs[19],
            "cek_builtin_cost-exBudgetmem": costs[20],
            "cek_const_cost-exBudgetCPU": costs[21],
            "cek_const_cost-exBudgetmem": costs[22],
            "cek_delay_cost-exBudgetCPU": costs[23],
            "cek_delay_cost-exBudgetmem": costs[24],
            "cek_force_cost-exBudgetCPU": costs[25],
            "cek_force_cost-exBudgetmem": costs[26],
            "cek_lam_cost-exBudgetCPU": costs[27],
            "cek_lam_cost-exBudgetmem": costs[28],
            "cek_startup_cost-exBudgetCPU": costs[29],
            "cek_startup_cost-exBudgetmem": costs[30],
            "cek_var_cost-exBudgetCPU": costs[31],
            "cek_var_cost-exBudgetmem": costs[32],
            "choose_data-cpu-arguments": costs[33],
            "choose_data-mem-arguments": costs[34],
            "choose_list-cpu-arguments": costs[35],
            "choose_list-mem-arguments": costs[36],
            "choose_unit-cpu-arguments": costs[37],
            "choose_unit-mem-arguments": costs[38],
            "cons_byte_string-cpu-arguments-intercept": costs[39],
            "cons_byte_string-cpu-arguments-slope": costs[40],
            "cons_byte_string-mem-arguments-intercept": costs[41],
            "cons_byte_string-mem-arguments-slope": costs[42],
            "constr_data-cpu-arguments": costs[43],
            "constr_data-mem-arguments": costs[44],
            "decode_utf8-cpu-arguments-intercept": costs[45],
            "decode_utf8-cpu-arguments-slope": costs[46],
            "decode_utf8-mem-arguments-intercept": costs[47],
            "decode_utf8-mem-arguments-slope": costs[48],
            "divide_integer-cpu-arguments-constant": costs[49],
            "divide_integer-cpu-arguments-c00": costs[50],
            "divide_integer-cpu-arguments-c01": costs[51],
            "divide_integer-cpu-arguments-c02": costs[52],
            "divide_integer-cpu-arguments-c10": costs[53],
            "divide_integer-cpu-arguments-c11": costs[54],
            "divide_integer-cpu-arguments-c20": costs[55],
            "divide_integer-cpu-arguments-minimum": costs[56],
            "divide_integer-mem-arguments-intercept": costs[57],
            "divide_integer-mem-arguments-minimum": costs[58],
            "divide_integer-mem-arguments-slope": costs[59],
            "encode_utf8-cpu-arguments-intercept": costs[60],
            "encode_utf8-cpu-arguments-slope": costs[61],
            "encode_utf8-mem-arguments-intercept": costs[62],
            "encode_utf8-mem-arguments-slope": costs[63],
            "equals_byte_string-cpu-arguments-constant": costs[64],
            "equals_byte_string-cpu-arguments-intercept": costs[65],
            "equals_byte_string-cpu-arguments-slope": costs[66],
            "equals_byte_string-mem-arguments": costs[67],
            "equals_data-cpu-arguments-intercept": costs[68],
            "equals_data-cpu-arguments-slope": costs[69],
            "equals_data-mem-arguments": costs[70],
            "equals_integer-cpu-arguments-intercept": costs[71],
            "equals_integer-cpu-arguments-slope": costs[72],
            "equals_integer-mem-arguments": costs[73],
            "equals_string-cpu-arguments-constant": costs[74],
            "equals_string-cpu-arguments-intercept": costs[75],
            "equals_string-cpu-arguments-slope": costs[76],
            "equals_string-mem-arguments": costs[77],
            "fst_pair-cpu-arguments": costs[78],
            "fst_pair-mem-arguments": costs[79],
            "head_list-cpu-arguments": costs[80],
            "head_list-mem-arguments": costs[81],
            "i_data-cpu-arguments": costs[82],
            "i_data-mem-arguments": costs[83],
            "if_then_else-cpu-arguments": costs[84],
            "if_then_else-mem-arguments": costs[85],
            "index_byte_string-cpu-arguments": costs[86],
            "index_byte_string-mem-arguments": costs[87],
            "length_of_byte_string-cpu-arguments": costs[88],
            "length_of_byte_string-mem-arguments": costs[89],
            "less_than_byte_string-cpu-arguments-intercept": costs[90],
            "less_than_byte_string-cpu-arguments-slope": costs[91],
            "less_than_byte_string-mem-arguments": costs[92],
            "less_than_equals_byte_string-cpu-arguments-intercept": costs[93],
            "less_than_equals_byte_string-cpu-arguments-slope": costs[94],
            "less_than_equals_byte_string-mem-arguments": costs[95],
            "less_than_equals_integer-cpu-arguments-intercept": costs[96],
            "less_than_equals_integer-cpu-arguments-slope": costs[97],
            "less_than_equals_integer-mem-arguments": costs[98],
            "less_than_integer-cpu-arguments-intercept": costs[99],
            "less_than_integer-cpu-arguments-slope": costs[100],
            "less_than_integer-mem-arguments": costs[101],
            "list_data-cpu-arguments": costs[102],
            "list_data-mem-arguments": costs[103],
            "map_data-cpu-arguments": costs[104],
            "map_data-mem-arguments": costs[105],
            "mk_cons-cpu-arguments": costs[106],
            "mk_cons-mem-arguments": costs[107],
            "mk_nil_data-cpu-arguments": costs[108],
            "mk_nil_data-mem-arguments": costs[109],
            "mk_nil_pair_data-cpu-arguments": costs[110],
            "mk_nil_pair_data-mem-arguments": costs[111],
            "mk_pair_data-cpu-arguments": costs[112],
            "mk_pair_data-mem-arguments": costs[113],
            "mod_integer-cpu-arguments-constant": costs[114],
            "mod_integer-cpu-arguments-c00": costs[115],
            "mod_integer-cpu-arguments-c01": costs[116],
            "mod_integer-cpu-arguments-c02": costs[117],
            "mod_integer-cpu-arguments-c10": costs[118],
            "mod_integer-cpu-arguments-c11": costs[119],
            "mod_integer-cpu-arguments-c20": costs[120],
            "mod_integer-cpu-arguments-minimum": costs[121],
            "mod_integer-mem-arguments-intercept": costs[122],
            "mod_integer-mem-arguments-slope": costs[123],
            "multiply_integer-cpu-arguments-intercept": costs[124],
            "multiply_integer-cpu-arguments-slope": costs[125],
            "multiply_integer-mem-arguments-intercept": costs[126],
            "multiply_integer-mem-arguments-slope": costs[127],
            "null_list-cpu-arguments": costs[128],
            "null_list-mem-arguments": costs[129],
            "quotient_integer-cpu-arguments-constant": costs[130],
            "quotient_integer-cpu-arguments-c00": costs[131],
            "quotient_integer-cpu-arguments-c01": costs[132],
            "quotient_integer-cpu-arguments-c02": costs[133],
            "quotient_integer-cpu-arguments-c10": costs[134],
            "quotient_integer-cpu-arguments-c11": costs[135],
            "quotient_integer-cpu-arguments-c20": costs[136],
            "quotient_integer-cpu-arguments-minimum": costs[137],
            "quotient_integer-mem-arguments-intercept": costs[138],
            "quotient_integer-mem-arguments-minimum": costs[139],
            "quotient_integer-mem-arguments-slope": costs[140],
            "remainder_integer-cpu-arguments-constant": costs[141],
            "remainder_integer-cpu-arguments-c00": costs[142],
            "remainder_integer-cpu-arguments-c01": costs[143],
            "remainder_integer-cpu-arguments-c02": costs[144],
            "remainder_integer-cpu-arguments-c10": costs[145],
            "remainder_integer-cpu-arguments-c11": costs[146],
            "remainder_integer-cpu-arguments-c20": costs[147],
            "remainder_integer-cpu-arguments-minimum": costs[148],
            "remainder_integer-mem-arguments-intercept": costs[149],
            "remainder_integer-mem-arguments-slope": costs[150],
            "serialise_data-cpu-arguments-intercept": costs[151],
            "serialise_data-cpu-arguments-slope": costs[152],
            "serialise_data-mem-arguments-intercept": costs[153],
            "serialise_data-mem-arguments-slope": costs[154],
            "sha2_256-cpu-arguments-intercept": costs[155],
            "sha2_256-cpu-arguments-slope": costs[156],
            "sha2_256-mem-arguments": costs[157],
            "sha3_256-cpu-arguments-intercept": costs[158],
            "sha3_256-cpu-arguments-slope": costs[159],
            "sha3_256-mem-arguments": costs[160],
            "slice_byte_string-cpu-arguments-intercept": costs[161],
            "slice_byte_string-cpu-arguments-slope": costs[162],
            "slice_byte_string-mem-arguments-intercept": costs[163],
            "slice_byte_string-mem-arguments-slope": costs[164],
            "snd_pair-cpu-arguments": costs[165],
            "snd_pair-mem-arguments": costs[166],
            "subtract_integer-cpu-arguments-intercept": costs[167],
            "subtract_integer-cpu-arguments-slope": costs[168],
            "subtract_integer-mem-arguments-intercept": costs[169],
            "subtract_integer-mem-arguments-slope": costs[170],
            "tail_list-cpu-arguments": costs[171],
            "tail_list-mem-arguments": costs[172],
            "trace-cpu-arguments": costs[173],
            "trace-mem-arguments": costs[174],
            "un_b_data-cpu-arguments": costs[175],
            "un_b_data-mem-arguments": costs[176],
            "un_constr_data-cpu-arguments": costs[177],
            "un_constr_data-mem-arguments": costs[178],
            "un_i_data-cpu-arguments": costs[179],
            "un_i_data-mem-arguments": costs[180],
            "un_list_data-cpu-arguments": costs[181],
            "un_list_data-mem-arguments": costs[182],
            "un_map_data-cpu-arguments": costs[183],
            "un_map_data-mem-arguments": costs[184],
            "verify_ecdsa_secp256k1_signature-cpu-arguments": costs[185],
            "verify_ecdsa_secp256k1_signature-mem-arguments": costs[186],
            "verify_ed25519_signature-cpu-arguments-intercept": costs[187],
            "verify_ed25519_signature-cpu-arguments-slope": costs[188],
            "verify_ed25519_signature-mem-arguments": costs[189],
            "verify_schnorr_secp256k1_signature-cpu-arguments-intercept": costs[190],
            "verify_schnorr_secp256k1_signature-cpu-arguments-slope": costs[191],
            "verify_schnorr_secp256k1_signature-mem-arguments": costs[192],
            "cek_constr_cost-exBudgetCPU": costs[193],
            "cek_constr_cost-exBudgetmem": costs[194],
            "cek_case_cost-exBudgetCPU": costs[195],
            "cek_case_cost-exBudgetmem": costs[196],
            "bls12_381_G1_add-cpu-arguments": costs[197],
            "bls12_381_G1_add-mem-arguments": costs[198],
            "bls12_381_G1_compress-cpu-arguments": costs[199],
            "bls12_381_G1_compress-mem-arguments": costs[200],
            "bls12_381_G1_equal-cpu-arguments": costs[201],
            "bls12_381_G1_equal-mem-arguments": costs[202],
            "bls12_381_G1_hashToGroup-cpu-arguments-intercept": costs[203],
            "bls12_381_G1_hashToGroup-cpu-arguments-slope": costs[204],
            "bls12_381_G1_hashToGroup-mem-arguments": costs[205],
            "bls12_381_G1_neg-cpu-arguments": costs[206],
            "bls12_381_G1_neg-mem-arguments": costs[207],
            "bls12_381_G1_scalarMul-cpu-arguments-intercept": costs[208],
            "bls12_381_G1_scalarMul-cpu-arguments-slope": costs[209],
            "bls12_381_G1_scalarMul-mem-arguments": costs[210],
            "bls12_381_G1_uncompress-cpu-arguments": costs[211],
            "bls12_381_G1_uncompress-mem-arguments": costs[212],
            "bls12_381_G2_add-cpu-arguments": costs[213],
            "bls12_381_G2_add-mem-arguments": costs[214],
            "bls12_381_G2_compress-cpu-arguments": costs[215],
            "bls12_381_G2_compress-mem-arguments": costs[216],
            "bls12_381_G2_equal-cpu-arguments": costs[217],
            "bls12_381_G2_equal-mem-arguments": costs[218],
            "bls12_381_G2_hashToGroup-cpu-arguments-intercept": costs[219],
            "bls12_381_G2_hashToGroup-cpu-arguments-slope": costs[220],
            "bls12_381_G2_hashToGroup-mem-arguments": costs[221],
            "bls12_381_G2_neg-cpu-arguments": costs[222],
            "bls12_381_G2_neg-mem-arguments": costs[223],
            "bls12_381_G2_scalarMul-cpu-arguments-intercept": costs[224],
            "bls12_381_G2_scalarMul-cpu-arguments-slope": costs[225],
            "bls12_381_G2_scalarMul-mem-arguments": costs[226],
            "bls12_381_G2_uncompress-cpu-arguments": costs[227],
            "bls12_381_G2_uncompress-mem-arguments": costs[228],
            "bls12_381_finalVerify-cpu-arguments": costs[229],
            "bls12_381_finalVerify-mem-arguments": costs[230],
            "bls12_381_millerLoop-cpu-arguments": costs[231],
            "bls12_381_millerLoop-mem-arguments": costs[232],
            "bls12_381_mulMlResult-cpu-arguments": costs[233],
            "bls12_381_mulMlResult-mem-arguments": costs[234],
            "keccak_256-cpu-arguments-intercept": costs[235],
            "keccak_256-cpu-arguments-slope": costs[236],
            "keccak_256-mem-arguments": costs[237],
            "blake2b_224-cpu-arguments-intercept": costs[238],
            "blake2b_224-cpu-arguments-slope": costs[239],
            "blake2b_224-mem-arguments-slope": costs[240],
            "integerToByteString-cpu-arguments-c0": costs[241],
            "integerToByteString-cpu-arguments-c1": costs[242],
            "integerToByteString-cpu-arguments-c2": costs[243],
            "integerToByteString-mem-arguments-intercept": costs[244],
            "integerToByteString-mem-arguments-slope": costs[245],
            "byteStringToInteger-cpu-arguments-c0": costs[246],
            "byteStringToInteger-cpu-arguments-c1": costs[247],
            "byteStringToInteger-cpu-arguments-c2": costs[248],
            "byteStringToInteger-mem-arguments-intercept": costs[249],
            "byteStringToInteger-mem-arguments-slope": costs[250],
        }

        if len(costs) == 297:
            ret.update(
                {
                    "andByteString-cpu-arguments-intercept": costs[251],
                    "andByteString-cpu-arguments-slope1": costs[252],
                    "andByteString-cpu-arguments-slope2": costs[253],
                    "andByteString-memory-arguments-intercept": costs[254],
                    "andByteString-memory-arguments-slope": costs[255],
                    "orByteString-cpu-arguments-intercept": costs[256],
                    "orByteString-cpu-arguments-slope1": costs[257],
                    "orByteString-cpu-arguments-slope2": costs[258],
                    "orByteString-memory-arguments-intercept": costs[259],
                    "orByteString-memory-arguments-slope": costs[260],
                    "xorByteString-cpu-arguments-intercept": costs[261],
                    "xorByteString-cpu-arguments-slope1": costs[262],
                    "xorByteString-cpu-arguments-slope2": costs[263],
                    "xorByteString-memory-arguments-intercept": costs[264],
                    "xorByteString-memory-arguments-slope": costs[265],
                    "complementByteString-cpu-arguments-intercept": costs[266],
                    "complementByteString-cpu-arguments-slope": costs[267],
                    "complementByteString-memory-arguments-intercept": costs[268],
                    "complementByteString-memory-arguments-slope": costs[269],
                    "readBit-cpu-arguments": costs[270],
                    "readBit-memory-arguments": costs[271],
                    "writeBits-cpu-arguments-intercept": costs[272],
                    "writeBits-cpu-arguments-slope": costs[273],
                    "writeBits-memory-arguments-intercept": costs[274],
                    "writeBits-memory-arguments-slope": costs[275],
                    "replicateByte-cpu-arguments-intercept": costs[276],
                    "replicateByte-cpu-arguments-slope": costs[277],
                    "replicateByte-memory-arguments-intercept": costs[278],
                    "replicateByte-memory-arguments-slope": costs[279],
                    "shiftByteString-cpu-arguments-intercept": costs[280],
                    "shiftByteString-cpu-arguments-slope": costs[281],
                    "shiftByteString-memory-arguments-intercept": costs[282],
                    "shiftByteString-memory-arguments-slope": costs[283],
                    "rotateByteString-cpu-arguments-intercept": costs[284],
                    "rotateByteString-cpu-arguments-slope": costs[285],
                    "rotateByteString-memory-arguments-intercept": costs[286],
                    "rotateByteString-memory-arguments-slope": costs[287],
                    "countSetBits-cpu-arguments-intercept": costs[288],
                    "countSetBits-cpu-arguments-slope": costs[289],
                    "countSetBits-memory-arguments": costs[290],
                    "findFirstSetBit-cpu-arguments-intercept": costs[291],
                    "findFirstSetBit-cpu-arguments-slope": costs[292],
                    "findFirstSetBit-memory-arguments": costs[293],
                    "ripemd_160-cpu-arguments-intercept": costs[294],
                    "ripemd_160-cpu-arguments-slope": costs[295],
                    "ripemd_160-memory-arguments": costs[296],
                }
            )
        return ret


def snake_case_to_camel_case(s: str) -> str:
    """
    Convert snake_case to camelCase.

    Parameters:
    s (str): A string in snake_case format.

    Returns:
    str: The string converted to camelCase format.
    """
    # Split the string by underscores
    words = s.split('_')

    # Capitalize the first letter of each word except the first one
    camel_case = words[0] + ''.join(word.capitalize() for word in words[1:])

    return camel_case

def only_before(char: str, f, x: str):
    """
    Apply f on x only before the first character char
    """
    s = x.split(char)
    return char.join([f(s[0])] + s[1:])



if __name__ == '__main__':
    cost_file_raw = sys.argv[1]
    with open(cost_file_raw) as f:
        raw_content = json.load(f)
    res = {}
    for plutus_version in (1, 2, 3):
        version_full = f"PlutusV{plutus_version}"
        res[version_full] = {
            only_before("-", snake_case_to_camel_case, k): v for k,v in
            translate(version_full, raw_content[version_full]).items()
        }
    print(json.dumps(res, indent=4))
